root = true
# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file

# Standard properties
[*]
# Don't use tabs for indentation.
indent_style = space
end_of_line = lf
trim_trailing_whitespace = true
insert_final_newline = true
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Microsoft .NET properties
csharp_preferred_modifier_order = public, private, protected, internal, new, static, abstract, virtual, sealed, readonly, override, extern, unsafe, volatile, async, file, required:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
dotnet_naming_rule.constants_should_be_pascal_case_rule.import_to_resharper = True
dotnet_naming_rule.constants_should_be_pascal_case_rule.resharper_description = constants_should_be_pascal_case
dotnet_naming_rule.constants_should_be_pascal_case_rule.resharper_guid = d48c6dac-b35d-4bf0-ae21-9e93c2a1e3b6
dotnet_naming_rule.constants_should_be_pascal_case_rule.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case_rule.style = upper_camel_case_style
dotnet_naming_rule.constants_should_be_pascal_case_rule.symbols = constants_should_be_pascal_case_symbols
dotnet_naming_rule.constants_should_be_pascal_case_rule_1.import_to_resharper = False
dotnet_naming_rule.constants_should_be_pascal_case_rule_1.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case_rule_1.style = upper_camel_case_style
dotnet_naming_rule.constants_should_be_pascal_case_rule_1.symbols = constants_should_be_pascal_case_symbols_1
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.import_to_resharper = True
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.resharper_description = instance_fields_should_be_camel_case
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.resharper_guid = 1c156c3f-a5a3-4d91-b3db-64d361ae42f2
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.style = lower_camel_case_style_1
dotnet_naming_rule.instance_fields_should_be_camel_case_rule.symbols = instance_fields_should_be_camel_case_symbols
dotnet_naming_rule.interfaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.interfaces_rule.severity = suggestion
dotnet_naming_rule.interfaces_rule.style = upper_camel_case_style
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols
dotnet_naming_rule.locals_should_be_camel_case_rule.import_to_resharper = True
dotnet_naming_rule.locals_should_be_camel_case_rule.resharper_description = locals_should_be_camel_case
dotnet_naming_rule.locals_should_be_camel_case_rule.resharper_guid = 5e1b96c7-9c9d-4e5b-9b84-006303a1893e
dotnet_naming_rule.locals_should_be_camel_case_rule.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case_rule.style = lower_camel_case_style
dotnet_naming_rule.locals_should_be_camel_case_rule.symbols = locals_should_be_camel_case_symbols
dotnet_naming_rule.local_constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.local_constants_rule.resharper_style = AaBb, aaBb
dotnet_naming_rule.local_constants_rule.severity = suggestion
dotnet_naming_rule.local_constants_rule.style = upper_camel_case_style
dotnet_naming_rule.local_constants_rule.symbols = local_constants_symbols
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.import_to_resharper = True
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.resharper_description = local_functions_should_be_pascal_case
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.resharper_guid = 82d442cc-221c-4baa-b3a6-92ea89780c85
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.style = upper_camel_case_style
dotnet_naming_rule.local_functions_should_be_pascal_case_rule.symbols = local_functions_should_be_pascal_case_symbols
dotnet_naming_rule.members_should_be_pascal_case_rule.import_to_resharper = True
dotnet_naming_rule.members_should_be_pascal_case_rule.resharper_description = members_should_be_pascal_case
dotnet_naming_rule.members_should_be_pascal_case_rule.resharper_guid = 2895f946-7c3e-48a0-957e-9b92404d2cac
dotnet_naming_rule.members_should_be_pascal_case_rule.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case_rule.style = upper_camel_case_style
dotnet_naming_rule.members_should_be_pascal_case_rule.symbols = members_should_be_pascal_case_symbols
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.import_to_resharper = True
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.resharper_description = non_private_readonly_fields_should_be_pascal_case
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.resharper_guid = d4538978-e633-41a8-9b7c-d9708c1a0267
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.style = upper_camel_case_style
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case_rule.symbols = non_private_readonly_fields_should_be_pascal_case_symbols
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.import_to_resharper = True
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.resharper_description = non_private_static_fields_should_be_pascal_case
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.resharper_guid = b6105307-a9b0-42eb-be74-c44921178fd8
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.style = upper_camel_case_style
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case_rule.symbols = non_private_static_fields_should_be_pascal_case_symbols
dotnet_naming_rule.private_constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_constants_rule.resharper_style = AaBb, _ + aaBb
dotnet_naming_rule.private_constants_rule.severity = suggestion
dotnet_naming_rule.private_constants_rule.style = upper_camel_case_style
dotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols
dotnet_naming_rule.private_static_fields_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_static_fields_rule.severity = suggestion
dotnet_naming_rule.private_static_fields_rule.style = s_lower_camel_case_style
dotnet_naming_rule.private_static_fields_rule.symbols = private_static_fields_symbols
dotnet_naming_rule.private_static_readonly_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_static_readonly_rule.severity = suggestion
dotnet_naming_rule.private_static_readonly_rule.style = s_lower_camel_case_style
dotnet_naming_rule.private_static_readonly_rule.symbols = private_static_readonly_symbols
dotnet_naming_rule.static_fields_should_be_camel_case_rule.import_to_resharper = True
dotnet_naming_rule.static_fields_should_be_camel_case_rule.resharper_description = static_fields_should_be_camel_case
dotnet_naming_rule.static_fields_should_be_camel_case_rule.resharper_guid = eaec80d5-99fa-4192-b9e2-c7adae41e2c8
dotnet_naming_rule.static_fields_should_be_camel_case_rule.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case_rule.style = s_lower_camel_case_style
dotnet_naming_rule.static_fields_should_be_camel_case_rule.symbols = static_fields_should_be_camel_case_symbols
dotnet_naming_rule.type_parameters_rule.import_to_resharper = as_predefined
dotnet_naming_rule.type_parameters_rule.severity = suggestion
dotnet_naming_rule.type_parameters_rule.style = upper_camel_case_style
dotnet_naming_rule.type_parameters_rule.symbols = type_parameters_symbols
dotnet_naming_rule.unity_serialized_field_rule.import_to_resharper = True
dotnet_naming_rule.unity_serialized_field_rule.resharper_description = Unity serialized field
dotnet_naming_rule.unity_serialized_field_rule.resharper_guid = 5f0fdb63-c892-4d2c-9324-15c80b22a7ef
dotnet_naming_rule.unity_serialized_field_rule.severity = warning
dotnet_naming_rule.unity_serialized_field_rule.style = lower_camel_case_style
dotnet_naming_rule.unity_serialized_field_rule.symbols = unity_serialized_field_symbols
dotnet_naming_rule.unity_serialized_field_rule_1.import_to_resharper = True
dotnet_naming_rule.unity_serialized_field_rule_1.resharper_description = Unity serialized field
dotnet_naming_rule.unity_serialized_field_rule_1.resharper_guid = 5f0fdb63-c892-4d2c-9324-15c80b22a7ef
dotnet_naming_rule.unity_serialized_field_rule_1.severity = suggestion
dotnet_naming_rule.unity_serialized_field_rule_1.style = lower_camel_case_style
dotnet_naming_rule.unity_serialized_field_rule_1.symbols = unity_serialized_field_symbols_1
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_style.lower_camel_case_style_1.capitalization = camel_case
dotnet_naming_style.lower_camel_case_style_1.required_prefix = _
dotnet_naming_style.s_lower_camel_case_style.capitalization = camel_case
dotnet_naming_style.s_lower_camel_case_style.required_prefix = s_
dotnet_naming_style.upper_camel_case_style.capitalization = pascal_case
dotnet_naming_symbols.constants_should_be_pascal_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.constants_should_be_pascal_case_symbols.applicable_kinds = local
dotnet_naming_symbols.constants_should_be_pascal_case_symbols.required_modifiers = const
dotnet_naming_symbols.constants_should_be_pascal_case_symbols.resharper_applicable_kinds = constant_field, local_constant
dotnet_naming_symbols.constants_should_be_pascal_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.constants_should_be_pascal_case_symbols_1.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.constants_should_be_pascal_case_symbols_1.applicable_kinds = field
dotnet_naming_symbols.constants_should_be_pascal_case_symbols_1.required_modifiers = const
dotnet_naming_symbols.instance_fields_should_be_camel_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.instance_fields_should_be_camel_case_symbols.applicable_kinds = field
dotnet_naming_symbols.instance_fields_should_be_camel_case_symbols.resharper_applicable_kinds = any_field
dotnet_naming_symbols.instance_fields_should_be_camel_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface
dotnet_naming_symbols.locals_should_be_camel_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.locals_should_be_camel_case_symbols.applicable_kinds = parameter, local
dotnet_naming_symbols.locals_should_be_camel_case_symbols.resharper_applicable_kinds = parameter, local
dotnet_naming_symbols.locals_should_be_camel_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.local_constants_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_constants_symbols.applicable_kinds = local
dotnet_naming_symbols.local_constants_symbols.required_modifiers = const
dotnet_naming_symbols.local_functions_should_be_pascal_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.local_functions_should_be_pascal_case_symbols.applicable_kinds = local_function
dotnet_naming_symbols.local_functions_should_be_pascal_case_symbols.resharper_applicable_kinds = local_function
dotnet_naming_symbols.local_functions_should_be_pascal_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.members_should_be_pascal_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.members_should_be_pascal_case_symbols.applicable_kinds = namespace, class, struct, interface, enum, property, method, field, event, delegate, parameter, type_parameter, local, local_function
dotnet_naming_symbols.members_should_be_pascal_case_symbols.resharper_applicable_kinds = namespace, class, struct, interface, enum, property, method, any_field, event, delegate, parameter, type_parameter, local, local_function
dotnet_naming_symbols.members_should_be_pascal_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.non_private_readonly_fields_should_be_pascal_case_symbols.applicable_accessibilities = local, public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields_should_be_pascal_case_symbols.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields_should_be_pascal_case_symbols.resharper_applicable_kinds = any_field
dotnet_naming_symbols.non_private_readonly_fields_should_be_pascal_case_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.non_private_static_fields_should_be_pascal_case_symbols.applicable_accessibilities = local, public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields_should_be_pascal_case_symbols.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields_should_be_pascal_case_symbols.required_modifiers = static
dotnet_naming_symbols.non_private_static_fields_should_be_pascal_case_symbols.resharper_applicable_kinds = any_field
dotnet_naming_symbols.non_private_static_fields_should_be_pascal_case_symbols.resharper_required_modifiers = static
dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers = const
dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers = static
dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers = static, readonly
dotnet_naming_symbols.static_fields_should_be_camel_case_symbols.applicable_accessibilities = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_fields_should_be_camel_case_symbols.applicable_kinds = field
dotnet_naming_symbols.static_fields_should_be_camel_case_symbols.required_modifiers = static
dotnet_naming_symbols.static_fields_should_be_camel_case_symbols.resharper_applicable_kinds = any_field
dotnet_naming_symbols.static_fields_should_be_camel_case_symbols.resharper_required_modifiers = static
dotnet_naming_symbols.type_parameters_symbols.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters_symbols.applicable_kinds = type_parameter
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_kinds = 
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_required_modifiers = instance
dotnet_naming_symbols.unity_serialized_field_symbols_1.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols_1.applicable_kinds = 
dotnet_naming_symbols.unity_serialized_field_symbols_1.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols_1.resharper_required_modifiers = instance
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
#file_header_template = Copyright Zigbang.All rights reserved.

# ReSharper properties
resharper_align_first_arg_by_paren = false
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_array_and_object_initializer = false
resharper_align_multiline_binary_patterns = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_list_pattern = true
resharper_align_multiline_parameter = true
resharper_align_multiline_property_pattern = false
resharper_align_multiline_switch_expression = false
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_align_tuple_components = false
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = required
resharper_braces_for_while = required
resharper_braces_redundant = false
resharper_cpp_max_line_length = 500
resharper_csharp_align_first_arg_by_paren = false
resharper_csharp_align_multiline_argument = false
resharper_csharp_align_multiline_parameter = false
resharper_csharp_case_block_braces = next_line_shifted_2
resharper_csharp_max_line_length = 250
resharper_csharp_outdent_commas = true
resharper_csharp_wrap_ternary_expr_style = wrap_if_long
resharper_enforce_line_ending_style = true
resharper_fsharp_max_line_length = 500
resharper_html_max_line_length = 500
resharper_indent_anonymous_method_block = false
resharper_indent_preprocessor_directives = normal
resharper_indent_preprocessor_region = no_indent
resharper_keep_existing_attribute_arrangement = true
resharper_keep_existing_declaration_block_arrangement = true
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_enum_arrangement = true
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_initializer_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_list_patterns_arrangement = false
resharper_keep_existing_property_patterns_arrangement = false
resharper_keep_existing_switch_expression_arrangement = false
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_accessor_attribute_on_same_line = false
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_record_field_attribute_on_same_line = true
resharper_place_simple_accessor_on_single_line = false
resharper_place_simple_switch_expression_on_single_line = true
resharper_resx_max_line_length = 500
resharper_shaderlab_max_line_length = 500
resharper_show_autodetect_configure_formatting_tip = false
resharper_t4_max_line_length = 500
resharper_use_heuristics_for_body_style = false
resharper_use_indent_from_vs = false
resharper_vb_max_line_length = 500
resharper_wrap_for_stmt_header_style = wrap_if_long
resharper_wrap_property_pattern = wrap_if_long
resharper_xmldoc_max_line_length = 500
resharper_xml_max_line_length = 500

# ReSharper inspection severities
resharper_arrange_accessor_owner_body_highlighting = none
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = none
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = suggestion
resharper_built_in_type_reference_style_highlighting = suggestion
resharper_inconsistent_naming_highlighting = suggestion
resharper_redundant_base_qualifier_highlighting = none
resharper_suggest_var_or_type_built_in_types_highlighting = suggestion
resharper_suggest_var_or_type_elsewhere_highlighting = suggestion
resharper_suggest_var_or_type_simple_types_highlighting = suggestion
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# Code files
[*.{cs,csx,vb,vbx,ts}]
indent_size = 4
insert_final_newline = true
charset = utf-8
end_of_line = lf

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

# Dotnet code style settings:
[*.{cs,vb}]

# IDE0055: Fix formatting
dotnet_diagnostic.ide0055.severity = warning

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Whitespace options
dotnet_style_allow_multiple_blank_lines_experimental = false

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# error RS2008: Enable analyzer release tracking for the analyzer project containing rule '{0}'
dotnet_diagnostic.rs2008.severity = none

# IDE0073: File header
dotnet_diagnostic.ide0073.severity = warning
#file_header_template = Copyright Zigbang. All rights reserved.

# IDE0035: Remove unreachable code
dotnet_diagnostic.ide0035.severity = warning

# IDE0036: Order modifiers
dotnet_diagnostic.ide0036.severity = warning

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.ide0043.severity = warning

# IDE0044: Make field readonly
dotnet_diagnostic.ide0044.severity = warning

# RS0016: Only enable if API files are present
dotnet_public_api_analyzer.require_api_files = true

# CSharp code style settings:
[*.cs]
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Currently only enabled for C# due to crash in VB analyzer.  VB can be enabled once
# https://github.com/dotnet/roslyn/pull/54259 has been published.
dotnet_style_allow_statement_immediately_after_block_experimental = false

[src/CodeStyle/**.{cs,vb}]
# warning RS0005: Do not use generic CodeAction.Create to create CodeAction
dotnet_diagnostic.rs0005.severity = none

[src/{Analyzers,CodeStyle,Features,Workspaces,EditorFeatures,VisualStudio}/**/*.{cs,vb}]

# IDE0011: Add braces
csharp_prefer_braces = when_multiline:warning
# NOTE: We need the below severity entry for Add Braces due to https://github.com/dotnet/roslyn/issues/44201
dotnet_diagnostic.ide0011.severity = warning

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.ide0040.severity = warning

# CONSIDER: Are IDE0051 and IDE0052 too noisy to be warnings for IDE editing scenarios? Should they be made build-only warnings?
# IDE0051: Remove unused private member
dotnet_diagnostic.ide0051.severity = warning

# IDE0052: Remove unread private member
dotnet_diagnostic.ide0052.severity = warning

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.ide0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_diagnostic.ide0060.severity = warning

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.ca1012.severity = warning

# CA1822: Make member static
dotnet_diagnostic.ca1822.severity = warning

# Prefer "var" everywhere
dotnet_diagnostic.ide0007.severity = warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# dotnet_style_allow_multiple_blank_lines_experimental
dotnet_diagnostic.ide2000.severity = warning

# csharp_style_allow_embedded_statements_on_same_line_experimental
dotnet_diagnostic.ide2001.severity = warning

# csharp_style_allow_blank_lines_between_consecutive_braces_experimental
dotnet_diagnostic.ide2002.severity = warning

# dotnet_style_allow_statement_immediately_after_block_experimental
dotnet_diagnostic.ide2003.severity = warning

# csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental
dotnet_diagnostic.ide2004.severity = warning

[src/{VisualStudio}/**/*.{cs,vb}]
# CA1822: Make member static
# Not enforced as a build 'warning' for 'VisualStudio' layer due to large number of false positives from https://github.com/dotnet/roslyn-analyzers/issues/3857 and https://github.com/dotnet/roslyn-analyzers/issues/3858
# Additionally, there is a risk of accidentally breaking an internal API that partners rely on though IVT.
dotnet_diagnostic.ca1822.severity = suggestion

[*.{appxmanifest,asax,ascx,aspx,axaml,build,cg,cginc,compute,cs,cshtml,dtd,fs,fsi,fsscript,fsx,fx,fxh,hlsl,hlsli,hlslinc,master,ml,mli,nuspec,paml,razor,resw,resx,shader,skin,usf,ush,vb,xaml,xamlx,xoml,xsd}]
indent_style = space
indent_size = 4
tab_width = 4

[*.{appxmanifest,asax,ascx,aspx,axaml,build,c,c++,cc,cginc,compute,cp,cpp,cs,cshtml,cu,cuh,cxx,dtd,fs,fsi,fsscript,fsx,fx,fxh,h,hh,hlsl,hlsli,hlslinc,hpp,hxx,inc,inl,ino,ipp,ixx,master,ml,mli,mpp,mq4,mq5,mqh,nuspec,paml,razor,resw,resx,shader,skin,tpp,usf,ush,vb,xaml,xamlx,xoml,xsd}]
indent_style = space
indent_size = 4
tab_width = 4
